$date
	Mon May 30 19:10:27 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Xor_tb $end
$var wire 1 ! out $end
$var reg 1 " a $end
$var reg 1 # b $end
$var integer 32 $ file [31:0] $end
$scope module XOR $end
$var wire 1 " a $end
$var wire 1 # b $end
$var wire 1 % w2 $end
$var wire 1 & w1 $end
$var wire 1 ! out $end
$var wire 1 ' notb $end
$var wire 1 ( nota $end
$scope module AND1 $end
$var wire 1 " a $end
$var wire 1 & out $end
$var wire 1 ) notaandb $end
$var wire 1 ' b $end
$scope module NAND $end
$var wire 1 " a $end
$var wire 1 ) out $end
$var wire 1 ' b $end
$upscope $end
$scope module NOT $end
$var wire 1 ) in $end
$var wire 1 & out $end
$scope module NAND $end
$var wire 1 ) a $end
$var wire 1 * b $end
$var wire 1 & out $end
$upscope $end
$upscope $end
$upscope $end
$scope module AND2 $end
$var wire 1 # b $end
$var wire 1 % out $end
$var wire 1 + notaandb $end
$var wire 1 ( a $end
$scope module NAND $end
$var wire 1 # b $end
$var wire 1 + out $end
$var wire 1 ( a $end
$upscope $end
$scope module NOT $end
$var wire 1 + in $end
$var wire 1 % out $end
$scope module NAND $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 % out $end
$upscope $end
$upscope $end
$upscope $end
$scope module NOT1 $end
$var wire 1 " in $end
$var wire 1 ( out $end
$scope module NAND $end
$var wire 1 " a $end
$var wire 1 - b $end
$var wire 1 ( out $end
$upscope $end
$upscope $end
$scope module NOT2 $end
$var wire 1 # in $end
$var wire 1 ' out $end
$scope module NAND $end
$var wire 1 # a $end
$var wire 1 . b $end
$var wire 1 ' out $end
$upscope $end
$upscope $end
$scope module OR $end
$var wire 1 & a $end
$var wire 1 % b $end
$var wire 1 ! out $end
$var wire 1 / notb $end
$var wire 1 0 nota $end
$scope module NAND $end
$var wire 1 ! out $end
$var wire 1 / b $end
$var wire 1 0 a $end
$upscope $end
$scope module NOT1 $end
$var wire 1 & in $end
$var wire 1 0 out $end
$scope module NAND $end
$var wire 1 & a $end
$var wire 1 1 b $end
$var wire 1 0 out $end
$upscope $end
$upscope $end
$scope module NOT2 $end
$var wire 1 % in $end
$var wire 1 / out $end
$scope module NAND $end
$var wire 1 % a $end
$var wire 1 2 b $end
$var wire 1 / out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope task display $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
12
11
10
1/
1.
1-
1,
1+
1*
1)
1(
1'
0&
0%
b10000000000000000000000000000011 $
0#
0"
0!
$end
#1
1!
0/
1%
0+
0'
1#
#2
00
1/
1&
0%
0)
1+
1'
0(
0#
1"
#3
0!
10
0&
1)
0'
1#
#4
